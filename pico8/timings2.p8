pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
cartdata("x")
function round(x)
 return band(0xffff.fff0,x+0x.0008)
end

function cost2tick(x)
  return x * 256 * 16 / 15 * 256
end

function _init()
 cls()
 step=0
 mul=32
 substep=0
 state = { 0, 0 }
 print("count   lua cost + cpu cost", 3, 109, 12)
 print("         *65536     *65536", 3, 115, 12)
end

function _update60()
 substep+=1
 if substep > 100 then
   _draw()
   step,substep=step+mul,0
   memcpy(0x6000,0x6180,0x1e80)
 end

 -- empty loop to clean stats
 local sa = { stat(1), stat(2) }
 for i=1,step do end

 local sb = { stat(1), stat(2) }
 for i=1,step do
 --rectfill(0,0,15,15)
--rect(0,0,43,2)
  --sspr(0,0,8,8,0,0,16,8)
--map(0,0,0,0,4,4)
cos(1.234)
--printh("x",3,3,3)
--line(17,35,91,15)
--sfx(1)
--rect(0,0,9,5)
--cls()
--  sub("93208439289432",3,17)
  --rnd()
  --sin()
  --line(0,0,127,17)
  --rectfill(0,0,127,0,8)
  --circ(64,64,22,8)
  --circfill(64,64,22,8)
  --circ(100,15,3,8)
  --circfill(100,15,3,8)
  --for k=1,50 do
  --  n = 17.34
  --end
 end
 local sc = { stat(1), stat(2) }

 local t1 = cost2tick(sc[1]-2*sb[1]+sa[1])
 local t2 = cost2tick(sc[2]-2*sb[2]+sa[2])
 state[1]=0.5*state[1]+0.5*(t1-t2)/(step > 0 and step or 1)
 state[2]=0.5*state[2]+0.5*t2/(step > 0 and step or 1)
end

function _draw()
 rectfill(0,120,127,127,0)
 print(step, 3, 121, 9)
 print(round(state[1]), 35, 121, 11)
 print('+ '..round(state[2]), 71, 121, 11)
 --print(cpu,3,2,7)
end

__gfx__
00000000dd00000d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000d000ddd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0070070000d0dd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0007700000ddd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0007700000ddd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0070070000d0d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000dd000d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000d0000dd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0100010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000001010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000001010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
