pico-8 cartridge // http://www.pico-8.com
version 16
__lua__

--[[
 status of this code:
  - tokenizer is rather ok
  - parser is flaky, we do not really check syntax
  - unary minus is a bit of a hack and doesn't handle "-2^2" correctly
  - evaluator is ok but relies on parser correctness
--]]

fn = {
  abs=abs,
  bnot=bnot,
  cos=cos,
  flr=flr,
  sin=sin,
  sqrt=sqrt,
  ['@'] = function(a) return -a end,
}

fn2 = {
  atan2=atan2,
  band=band,
  bor=bor,
  bxor=bxor,
  max=max,
  min=min,
  shl=shl,
  shr=shr,
}

op = {
  ['+'] = function(a, b) return a + b end,
  ['-'] = function(a, b) return a - b end,
  ['*'] = function(a, b) return a * b end,
  ['/'] = function(a, b) return a / b end,
  ['%'] = function(a, b) return a % b end,
  ['^'] = function(a, b) return a ^ b end,
}

prec = {
  ['+'] = 1, ['-'] = 1,
  ['*'] = 2, ['/'] = 2, ['%'] = 2,
  ['^'] = 3,
  ['@'] = 4, -- unary minus
}

punc = "(),"
digit = "0123456789"
alnum = digit.."abcdefghijklmnopqrstuvwxyz_"

function find(str, substr)
    for i = 1,#str do
        if sub(str, i, i + #substr - 1) == substr then
            return i
        end
    end
    return nil
end

function parse_num(str)
    local ret
    for i=1,#str do
        if tonum(sub(str, 1, i)) then
            ret = sub(str, 1, i)
        end
    end
    return ret
end

function parse_id(str)
    local i, next = 1, 2
    while next <= #str and find(alnum, sub(str, next, next)) do
        i, next = next, next + 1
    end
    return sub(str, 1, i)
end

function tokenize(str)
    local ret = {}
    while true do
        -- strip whitespace
        while sub(str, 1, 1) == " " do
            str = sub(str, 2, #str)
        end
        -- finished!
        if #str == 0 then
            return ret
        end
        -- symbols
        local ch = sub(str, 1, 1)
        if prec[ch] or find(punc, ch) then
            add(ret, ch)
        elseif find(digit, ch) then
            add(ret, parse_num(str))
        elseif find(alnum, ch) then
            local id = parse_id(str)
            if not fn[id] and not fn2[id] then
                return nil, "unknown function: "..id
            end
            add(ret, id)
        else
            return nil, "syntax error near: "..str
        end
        str = sub(str, 1 + #ret[#ret], #str)
    end
end

-- shunting-yard algorithm
function parse(tokens)
    local output = {}
    local stack = {}
    local function push(x) add(stack, x) end
    local function pop() local ret = stack[#stack] stack[#stack] = nil return ret end
    local function peek() return stack[#stack] end
    for i=1,#tokens do
        local t = tokens[i]
        if t == "-" and (i==1 or tokens[i-1] == "(" or prec[tokens[i-1]]) then
            t = "@" -- unary minus
        end
        if tonum(t) then
            add(output, tonum(t))
        elseif t == "(" then
            push(t)
        elseif t == ")" then
            while peek() and peek() != "(" do
                add(output, pop())
            end
            if pop() != "(" then
                return nil, "unmatched ')'"
            end
        elseif prec[t] then
            while peek() and peek() != "(" and
                (fn[peek()] or -- function
                 fn2[peek()] or -- function
                 prec[peek()] > prec[t] or -- operator with greater precedence
                 prec[peek()] == prec[t]) do -- operator with equal precedence, left-assoc
                add(output, pop())
            end
            push(t)
        elseif fn[t] or fn2[t] then -- function
            push(t)
        end
    end
    while peek() do
        local val = pop()
        if val == "(" then
            return nil, "unmatched '('"
        end
        add(output, val)
    end
    return output
end

function eval(tokens)
    local stack = {}
    for i=1,#tokens do
        local t = tokens[i]
        if tonum(t) then
            add(stack, t)
        elseif fn[t] then
            if #stack < 1 then
                return nil, "too few arguments for "..t
            end
            stack[#stack] = fn[t](stack[#stack])
        elseif fn2[t] then
            if #stack < 2 then
                return nil, "too few arguments for "..t
            end
            stack[#stack - 1] = fn2[t](stack[#stack - 1], stack[#stack])
            stack[#stack] = nil
        elseif prec[t] then
            if #stack < 2 then
                return nil, "too few arguments for "..t
            end
            stack[#stack - 1] = op[t](stack[#stack - 1], stack[#stack])
            stack[#stack] = nil
        end
    end
    if #stack != 1 then
        return nil, "syntax error"
    end
    return stack[#stack]
end

function _init()
    d = { { 12, "calculator v0.0" },
          { 12, "(c) 2018 sam hocevar" },
          { 6, "" },
          { 6, "enter any expression, e.g.:" },
          { 7, "  0x12 + 3 / sin(0x.123)" },
          { 6, "" },
        }
    h = {}
    poke(24365,1)
    s, p = "", 1
end

function _draw()
    cls()
    for i = 1,#d do
        color(d[i][1])
        print(d[i][2])
    end
    color(7)
    print("> "..s..(t()%1>.4 and "█" or "")) -- ⬅️
    rectfill(0,121,128,128,8)
    print("▤ feedback: sam@hocevar.net ▤", 2, 122, 7)
end

function _update60()
    -- disable pause menu
    if band(btn(), 64) != 0 then
        poke(0x5f30, 1)
    end
    -- arrows to go back in history
    if btnp(2) and p > 1 then
        p -= 1
        s = h[p]
    elseif btnp(3) and p < #h then
        p += 1
        s = h[p]
    end
    if stat(30) then
        local c = stat(31)
        if c == "\8" then
            s = sub(s, 1, #s - 1)
        elseif c == "\r" then
            add(d, {7, "> "..s})
            local r, e = tokenize(s)
            if r then
                if #r > 0 then
                    r, e = parse(r)
                    if r then
                        r, e = eval(r)
                    end
                else
                    r = nil
                end
            end
            if r then
                add(d, {11, r..sub("          ",#tostr(r),11).."  -- "..tostr(r,1)})
                add(h, s)
            elseif e then
                add(d, {14, "error: "..e})
                add(h, s)
            end
            s, p = "", #h + 1
        else
            s = s..c
        end
    end
    -- expire old displayed lines
    while #d > 19 do
        for i=1,#d do
            d[i]=d[i+1]
        end
    end
end

__label__
0cc0ccc0c0000cc0c0c0c000ccc0ccc00cc0ccc00000c0c0ccc00000ccc000000000000000000000000000000000000000000000000000000000000000000000
c000c0c0c000c000c0c0c000c0c00c00c0c0c0c00000c0c0c0c00000c0c000000000000000000000000000000000000000000000000000000000000000000000
c000ccc0c000c000c0c0c000ccc00c00c0c0cc000000c0c0c0c00000c0c000000000000000000000000000000000000000000000000000000000000000000000
c000c0c0c000c000c0c0c000c0c00c00c0c0c0c00000ccc0c0c00000c0c000000000000000000000000000000000000000000000000000000000000000000000
0cc0c0c0ccc00cc00cc0ccc0c0c00c00cc00c0c000000c00ccc00c00ccc000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c000cc00c000000ccc0ccc0cc00ccc000000cc0ccc0ccc00000c0c00cc00cc0ccc0c0c0ccc0ccc0000000000000000000000000000000000000000000000000
c000c00000c0000000c0c0c00c00c0c00000c000c0c0ccc00000c0c0c0c0c000c000c0c0c0c0c0c0000000000000000000000000000000000000000000000000
c000c00000c00000ccc0c0c00c00ccc00000ccc0ccc0c0c00000ccc0c0c0c000cc00c0c0ccc0cc00000000000000000000000000000000000000000000000000
c000c00000c00000c000c0c00c00c0c0000000c0c0c0c0c00000c0c0c0c0c000c000ccc0c0c0c0c0000000000000000000000000000000000000000000000000
0c000cc00c000000ccc0ccc0ccc0ccc00000cc00c0c0c0c00000c0c0cc000cc0ccc00c00c0c0c0c0000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66606600666066606660000066606600606000006660606066606660666006600660666006606600000000006660000006600000000000000000000000000000
60006060060060006060000060606060606000006000606060606060600060006000060060606060000000006000000060000000060000000000000000000000
66006060060066006600000066606060666000006600060066606600660066606660060060606060000000006600000060000000000000000000000000000000
60006060060060006060000060606060006000006000606060006060600000600060060060606060060000006000000060600000060000000000000000000000
66606060060066606060000060606060666000006660606060006060666066006600666066006060600000006660060066600600000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000777070707700777000000000000077700000007000000770777077000700777070700000770077707770070000000000000000000000000000000000
00000000707070700700007000000700000000700000070000007000070070707000707070700000070000700070007000000000000000000000000000000000
00000000707007000700777000007770000007700000070000007770070070707000707007000000070077700770007000000000000000000000000000000000
00000000707070700700700000000700000000700000070000000070070070707000707070700000070070000070007000000000000000000000000000000000
00000000777070707770777000000000000077700000700000007700777070700700777070700700777077707770070000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
70000000777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07000000777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700000777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07000000777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
70000000777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88777777788888777877787778778877787778877878788888888887787778777887887878877887787778787877787778888877887778777888887777777888
88888888888888788878887888787878787878788878788788888878887878777878787878787878887888787878787878888878787888878888888888888888
88777777788888778877887788787877887778788877888888888877787778787878787778787878887788787877787788888878787788878888887777777888
88888888888888788878887888787878787878788878788788888888787878787878887878787878887888777878787878888878787888878888888888888888
88777777788888788877787778777877787878877878788888888877887878787887787878778887787778878878787878878878787778878888887777777888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888

